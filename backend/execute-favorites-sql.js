const { Pool } = require('pg');
require('dotenv').config();

const pool = new Pool({
  connectionString: process.env.DATABASE_URL || 'postgresql://postgres:password@localhost:5432/soulsynergy'
});

async function createFavoritesTables() {
  const client = await pool.connect();
  
  try {
    console.log('üîß –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü –¥–ª—è –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö —ç–∫—Å–ø–µ—Ä—Ç–æ–≤ –∏ —Å–æ–±—ã—Ç–∏–π...');
    
    // –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö —ç–∫—Å–ø–µ—Ä—Ç–æ–≤
    await client.query(`
      CREATE TABLE IF NOT EXISTS expert_favorites (
        id SERIAL PRIMARY KEY,
        expert_id INTEGER NOT NULL REFERENCES users(id) ON DELETE CASCADE,
        user_id INTEGER NOT NULL REFERENCES users(id) ON DELETE CASCADE,
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        UNIQUE(expert_id, user_id)
      );
    `);
    console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ expert_favorites —Å–æ–∑–¥–∞–Ω–∞');

    // –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π
    await client.query(`
      CREATE TABLE IF NOT EXISTS event_favorites (
        id SERIAL PRIMARY KEY,
        event_id INTEGER NOT NULL REFERENCES events(id) ON DELETE CASCADE,
        user_id INTEGER NOT NULL REFERENCES users(id) ON DELETE CASCADE,
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        UNIQUE(event_id, user_id)
      );
    `);
    console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ event_favorites —Å–æ–∑–¥–∞–Ω–∞');

    // –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–æ–≤
    await client.query(`
      CREATE INDEX IF NOT EXISTS idx_expert_favorites_user_id ON expert_favorites(user_id);
    `);
    await client.query(`
      CREATE INDEX IF NOT EXISTS idx_expert_favorites_expert_id ON expert_favorites(expert_id);
    `);
    await client.query(`
      CREATE INDEX IF NOT EXISTS idx_event_favorites_user_id ON event_favorites(user_id);
    `);
    await client.query(`
      CREATE INDEX IF NOT EXISTS idx_event_favorites_event_id ON event_favorites(event_id);
    `);
    console.log('‚úÖ –ò–Ω–¥–µ–∫—Å—ã —Å–æ–∑–¥–∞–Ω—ã');

    console.log('üéâ –í—Å–µ —Ç–∞–±–ª–∏—Ü—ã –¥–ª—è –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü:', error);
  } finally {
    client.release();
    await pool.end();
  }
}

createFavoritesTables();
