import express from 'express';
import multer from 'multer';
import path from 'path';
import fs from 'fs';
import { authenticateToken } from '../middleware/auth';

const router = express.Router();

// –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É uploads –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
const uploadsDir = path.join(__dirname, '../../uploads');
console.log('üìÅ –ü—É—Ç—å –∫ uploads:', uploadsDir);

if (!fs.existsSync(uploadsDir)) {
  console.log('üìÅ –°–æ–∑–¥–∞—é –ø–∞–ø–∫—É uploads...');
  fs.mkdirSync(uploadsDir, { recursive: true });
  console.log('‚úÖ –ü–∞–ø–∫–∞ uploads —Å–æ–∑–¥–∞–Ω–∞');
} else {
  console.log('‚úÖ –ü–∞–ø–∫–∞ uploads —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞
const storage = multer.diskStorage({
  destination: (req, file, cb) => {
    cb(null, uploadsDir);
  },
  filename: (req, file, cb) => {
    const uniqueSuffix = Date.now() + '-' + Math.round(Math.random() * 1E9);
    const ext = path.extname(file.originalname);
    cb(null, `${file.fieldname}-${uniqueSuffix}${ext}`);
  }
});

// –§–∏–ª—å—Ç—Ä –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
const fileFilter = (req: any, file: any, cb: any) => {
  const allowedTypes = /jpeg|jpg|png|gif|webp/;
  const extname = allowedTypes.test(path.extname(file.originalname).toLowerCase());
  const mimetype = allowedTypes.test(file.mimetype);

  if (mimetype && extname) {
    return cb(null, true);
  } else {
    cb(new Error('–¢–æ–ª—å–∫–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–∞–∑—Ä–µ—à–µ–Ω—ã (jpeg, jpg, png, gif, webp)'));
  }
};

const upload = multer({
  storage: storage,
  limits: { fileSize: 20 * 1024 * 1024 }, // 20MB
  fileFilter: fileFilter
});

// –ó–∞–≥—Ä—É–∑–∫–∞ –æ–¥–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
router.post('/image', authenticateToken, upload.single('image'), (req, res) => {
  try {
    console.log('üì§ –ó–∞–ø—Ä–æ—Å –Ω–∞ –∑–∞–≥—Ä—É–∑–∫—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è');
    
    if (!req.file) {
      console.error('‚ùå –§–∞–π–ª –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω');
      return res.status(400).json({ error: '–§–∞–π–ª –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω' });
    }

    console.log('‚úÖ –§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω:', req.file.filename);
    console.log('üìÇ –ü—É—Ç—å:', req.file.path);

    const imageUrl = `/uploads/${req.file.filename}`;
    console.log('üîó URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:', imageUrl);
    
    res.json({ url: imageUrl });
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:', error);
    res.status(500).json({ error: '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞' });
  }
});

export default router;

