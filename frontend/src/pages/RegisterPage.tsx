import { useState } from 'react';
import { useNavigate, Link } from 'react-router-dom';
import { Form, Input, Button, Card, message, Typography, Radio, Modal, Checkbox, Space, Divider } from 'antd';
import { MailOutlined, LockOutlined, UserOutlined, CheckCircleOutlined } from '@ant-design/icons';
import { useAuth } from '../contexts/AuthContext';
import emailjs from '@emailjs/browser';

const { Title, Text } = Typography;

const RegisterPage = () => {
  const [loading, setLoading] = useState(false);
  const [consentChecked, setConsentChecked] = useState(false);
  const [selectedUserType, setSelectedUserType] = useState('client');
  const { register } = useAuth();
  const navigate = useNavigate();

  const sendVerificationEmail = async (email: string, name: string, verificationToken: string) => {
    try {
      const verificationUrl = `${window.location.origin}/verify-email?token=${verificationToken}`;
      
      await emailjs.send(
        import.meta.env.VITE_EMAILJS_SERVICE_ID,
        import.meta.env.VITE_EMAILJS_VERIFICATION_TEMPLATE_ID,
        {
          to_email: email,
          to_name: name,
          verification_url: verificationUrl,
          app_name: 'SoulSynergy'
        },
        import.meta.env.VITE_EMAILJS_PUBLIC_KEY
      );
      
      return true;
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ email:', error);
      return false;
    }
  };

  const onFinish = async (values: any) => {
    // –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω —Ç–∏–ø "—ç–∫—Å–ø–µ—Ä—Ç", –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –æ–ø–ª–∞—Ç—ã
    if (values.userType === 'expert') {
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã –≤ localStorage –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
      localStorage.setItem('registrationData', JSON.stringify({
        name: values.name,
        email: values.email,
        password: values.password,
        userType: values.userType
      }));
      
      // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –æ–ø–ª–∞—Ç—ã —Å –ø—Ä–µ–¥–≤—ã–±—Ä–∞–Ω–Ω—ã–º —Ç–∞—Ä–∏—Ñ–æ–º "–≥–æ–¥–æ–≤–æ–π"
      navigate('/become-expert?plan=yearly&from=registration');
      return;
    }

    // –û–±—ã—á–Ω–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –¥–ª—è –∫–ª–∏–µ–Ω—Ç–æ–≤
    setLoading(true);
    try {
      const result = await register(values.email, values.password, values.name, values.userType);
      
      // –û—Ç–ø—Ä–∞–≤–∫–∞ email –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏
      const emailSent = await sendVerificationEmail(
        result.user.email,
        result.user.name,
        result.user.verificationToken
      );
      
      if (emailSent) {
        Modal.success({
          title: '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!',
          content: (
            <div>
              <p>–ù–∞ –≤–∞—à email <strong>{result.user.email}</strong> –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–∏—Å—å–º–æ —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º.</p>
              <p>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ—á—Ç—É –∏ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∞–∫–∫–∞—É–Ω—Ç–∞.</p>
            </div>
          ),
          okText: '–ü–æ–Ω—è—Ç–Ω–æ',
          onOk: () => navigate('/login')
        });
      } else {
        message.warning('–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞, –Ω–æ –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å email. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.');
      }
    } catch (error: any) {
      message.error(error.response?.data?.error || '–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏');
    } finally {
      setLoading(false);
    }
  };

  return (
    <div style={{
      minHeight: '100vh',
      display: 'flex',
      alignItems: 'center',
      justifyContent: 'center',
      background: 'linear-gradient(135deg, rgb(180 194 255) 0%, rgb(245 236 255) 100%)',
      padding: '20px'
    }}>
      <Card
        style={{
          width: '100%',
          maxWidth: 480,
          borderRadius: 16,
          boxShadow: '0 20px 60px rgba(0,0,0,0.3)'
        }}
      >
        <div style={{ textAlign: 'center', marginBottom: 32 }}>
          <Title level={2} style={{ marginBottom: 8 }}>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è</Title>
          <Text type="secondary">–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ —Å–æ–æ–±—â–µ—Å—Ç–≤—É Synergy</Text>
        </div>

        <Form
          name="register"
          onFinish={onFinish}
          layout="vertical"
          size="large"
          initialValues={{ userType: 'client' }}
        >
          <Form.Item
            name="name"
            rules={[
              { required: true, message: '–í–≤–µ–¥–∏—Ç–µ –∏–º—è' },
              { min: 2, message: '–ú–∏–Ω–∏–º—É–º 2 —Å–∏–º–≤–æ–ª–∞' }
            ]}
          >
            <Input
              prefix={<UserOutlined />}
              placeholder="–ò–º—è"
            />
          </Form.Item>

          <Form.Item
            name="email"
            rules={[
              { required: true, message: '–í–≤–µ–¥–∏—Ç–µ email' },
              { type: 'email', message: '–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç email' }
            ]}
          >
            <Input
              prefix={<MailOutlined />}
              placeholder="Email"
            />
          </Form.Item>

          <Form.Item
            name="password"
            rules={[
              { required: true, message: '–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å' },
              { min: 6, message: '–ú–∏–Ω–∏–º—É–º 6 —Å–∏–º–≤–æ–ª–æ–≤' }
            ]}
          >
            <Input.Password
              prefix={<LockOutlined />}
              placeholder="–ü–∞—Ä–æ–ª—å"
            />
          </Form.Item>

          <Form.Item
            name="userType"
            label="–¢–∏–ø –∞–∫–∫–∞—É–Ω—Ç–∞"
            rules={[{ required: true }]}
          >
            <Radio.Group 
              onChange={(e) => setSelectedUserType(e.target.value)}
            >
              <Radio.Button value="client" style={{ width: '48%', textAlign: 'center' }}>
                –ö–ª–∏–µ–Ω—Ç
              </Radio.Button>
              <Radio.Button value="expert" style={{ width: '48%', textAlign: 'center', marginLeft: '4%' }}>
                –≠–∫—Å–ø–µ—Ä—Ç
              </Radio.Button>
            </Radio.Group>
          </Form.Item>

          {/* –ë–ª–æ–∫ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤ —ç–∫—Å–ø–µ—Ä—Ç–∞ */}
          {selectedUserType === 'expert' && (
            <Card 
              style={{ 
                background: 'linear-gradient(135deg, rgb(180, 194, 255) 0%, rgb(245, 236, 255) 100%)',
                border: 'none',
                borderRadius: 12,
                marginBottom: 16
              }}
            >
              <div style={{ textAlign: 'center', padding: '16px 0' }}>
                <Title level={4} style={{ color: '#1d1d1f', marginBottom: 12 }}>
                  üöÄ –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ —ç–∫—Å–ø–µ—Ä—Ç–∞
                </Title>
                
                <div style={{ marginBottom: 16 }}>
                  <Text 
                    style={{ 
                      fontSize: 20, 
                      textDecoration: 'line-through', 
                      color: '#86868b',
                      marginRight: 12
                    }}
                  >
                    3499 ‚ÇΩ/–º–µ—Å
                  </Text>
                  <div 
                    style={{ 
                      display: 'inline-block',
                      background: '#ff4d4f',
                      color: 'white',
                      padding: '4px 12px',
                      borderRadius: 20,
                      fontSize: 12,
                      fontWeight: 600
                    }}
                  >
                    –°–ï–ô–ß–ê–° 990 ‚ÇΩ/–≥–æ–¥!
                  </div>
                </div>
                
                <Space direction="vertical" size={8} style={{ width: '100%', marginBottom: 16 }}>
                  <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>
                    <CheckCircleOutlined style={{ color: '#52c41a', marginRight: 8 }} />
                    <Text style={{ fontSize: 14, color: '#1d1d1f' }}>–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å –≤ –∫–∞—Ç–∞–ª–æ–≥–µ</Text>
                  </div>
                  <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>
                    <CheckCircleOutlined style={{ color: '#52c41a', marginRight: 8 }} />
                    <Text style={{ fontSize: 14, color: '#1d1d1f' }}>–ü—É–±–ª–∏–∫–∞—Ü–∏—è –∏ –ø—Ä–æ–¥–∞–∂–∞ –∫—É—Ä—Å–æ–≤</Text>
                  </div>
                  <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>
                    <CheckCircleOutlined style={{ color: '#52c41a', marginRight: 8 }} />
                    <Text style={{ fontSize: 14, color: '#1d1d1f' }}>–†–∞–∑–º–µ—â–µ–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π</Text>
                  </div>
                  <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>
                    <CheckCircleOutlined style={{ color: '#52c41a', marginRight: 8 }} />
                    <Text style={{ fontSize: 14, color: '#1d1d1f' }}>–ü—Ä—è–º–∞—è –ø—Ä–æ–¥–∞–∂–∞ —É—Å–ª—É–≥</Text>
                  </div>
                </Space>
                
                <Text style={{ fontSize: 12, color: '#666' }}>
                  –ü–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤—ã –ø–µ—Ä–µ–π–¥–µ—Ç–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –æ–ø–ª–∞—Ç—ã
                </Text>
              </div>
            </Card>
          )}

          <Form.Item>
            <Checkbox
              checked={consentChecked}
              onChange={(e) => setConsentChecked(e.target.checked)}
            >
              <Text>
                –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É—è—Å—å —è —Å–æ–≥–ª–∞—à–∞—é—Å—å —Å{' '}
                <Link to="/offer" target="_blank" style={{ color: '#6366f1' }}>
                  –ø—É–±–ª–∏—á–Ω–æ–π –æ—Ñ–µ—Ä—Ç–æ–π
                </Link>
                {', '}
                <Link to="/user-agreement" target="_blank" style={{ color: '#6366f1' }}>
                  –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–º —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ–º
                </Link>
                {' '}–∏{' '}
                <Link to="/privacy" target="_blank" style={{ color: '#6366f1' }}>
                  –ø–æ–ª–∏—Ç–∏–∫–æ–π –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏
                </Link>
              </Text>
            </Checkbox>
          </Form.Item>

          <Form.Item>
            <Button
              type="primary"
              htmlType="submit"
              loading={loading}
              disabled={!consentChecked}
              block
              style={{ height: 48 }}
            >
              {selectedUserType === 'expert' ? '–ü–µ—Ä–µ–π—Ç–∏ –∫ –æ–ø–ª–∞—Ç–µ' : '–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è'}
            </Button>
          </Form.Item>

          <div style={{ textAlign: 'center' }}>
            <Text type="secondary">
              –£–∂–µ –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç? <Link to="/login">–í–æ–π—Ç–∏</Link>
            </Text>
          </div>
        </Form>
      </Card>
    </div>
  );
};

export default RegisterPage;
