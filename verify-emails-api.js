const axios = require('axios');

const API_BASE_URL = 'http://localhost:3001/api/auth';

async function verifyEmails() {
  const emails = ['trufelleg@gmail.com', 'gr-light369@yandex.ru'];
  
  console.log('üîç –ù–∞—á–∏–Ω–∞–µ–º –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é email –∞–¥—Ä–µ—Å–æ–≤...');
  
  for (const email of emails) {
    try {
      console.log(`\nüìß –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º: ${email}`);
      
      const response = await axios.post(`${API_BASE_URL}/verify-email-manual`, {
        email: email
      });
      
      console.log(`‚úÖ ${response.data.message}`);
      console.log(`   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${response.data.user.name} (ID: ${response.data.user.id})`);
      console.log(`   –°—Ç–∞—Ç—É—Å: ${response.data.user.email_verified ? '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω' : '–ù–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω'}`);
      
    } catch (error) {
      if (error.response) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –¥–ª—è ${email}:`, error.response.data.error);
      } else {
        console.error(`‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –¥–ª—è ${email}:`, error.message);
      }
    }
  }
  
  console.log('\nüéâ –í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω
async function checkServer() {
  try {
    await axios.get('http://localhost:3001/api/topics');
    console.log('‚úÖ –°–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω');
    return true;
  } catch (error) {
    console.error('‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ backend –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 3001');
    return false;
  }
}

async function main() {
  console.log('üöÄ –°–∫—Ä–∏–ø—Ç –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ email –∞–¥—Ä–µ—Å–æ–≤');
  
  const serverAvailable = await checkServer();
  if (!serverAvailable) {
    console.log('\nüí° –î–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:');
    console.log('   cd backend');
    console.log('   npm run dev');
    return;
  }
  
  await verifyEmails();
}

main();

